import { NextRequest, NextResponse } from "next/server";

const TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const CHAT_ID = process.env.TELEGRAM_CHAT_ID;
const TELEGRAM_API_URL = `https://api.telegram.org/bot${TOKEN}/sendMessage`;

export async function POST(req: NextRequest) {
    try {
        const {
            name,
            inRoute,
            toRoute,
            selectedDate,
            selectedTime,
            selectedBackDate,
            selectedBackTime,
            personName,
            personPhone,
            personEmail,
            count,
            qtyBags,
            isChecked,
            isOnOutTransfer,
            comment,
            price
        } = await req.json();

        console.log(name,
            inRoute,
            toRoute,
            selectedDate,
            selectedTime,
            selectedBackDate,
            selectedBackTime,
            personName,
            personPhone,
            personEmail,
            count,
            qtyBags,
            isChecked,
            isOnOutTransfer,
            comment,
            price);


        const text = `üì© *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞! ${name}* 
        üöó –ü—É–Ω–∫—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: *${inRoute}*
        üöó –ü—É–Ω–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è: *${toRoute}*
        üèÅ –î–∞—Ç–∞ –ø–æ–µ–∑–¥–∫–∏: *${selectedDate || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}*  
        ‚è∞ –í—Ä–µ–º—è: *${selectedTime || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"} * 
        
        üîÑ –û–±—Ä–∞—Ç–Ω–∞—è –ø–æ–µ–∑–¥–∫–∞: *${isOnOutTransfer ? "–î–∞" : "–ù–µ—Ç"}*
        ${isOnOutTransfer ?
                `üöó –î–∞—Ç–∞ –æ–±—Ä–∞—Ç–Ω–æ–π –ø–æ–µ–∑–¥–∫–∏: *${selectedBackDate || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}*
        ‚è≥ –í—Ä–µ–º—è –æ–±—Ä–∞—Ç–Ω–æ–π –ø–æ–µ–∑–¥–∫–∏: *${selectedBackTime || "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"}*` : ""}
        
        üë§ –ò–º—è: *${personName}*
        üìû –¢–µ–ª–µ—Ñ–æ–Ω: *${personPhone}*  
        üìß Email: *${personEmail}*  
        üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤: *${count}*
        üëú –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–≥–∞–∂–∞: *${qtyBags}*
        üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: *${comment || "–Ω–µ—Ç"}*
        üì° –ù—É–∂–Ω–æ —á—Ç–æ –±—ã —Å–≤—è–∑–∞–ª–∏—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º?: *${isChecked ? "–î–∞" : "–ù–µ—Ç"}*
        üìå –¶–µ–Ω–∞: *${price}*`;

        const response = await fetch(TELEGRAM_API_URL, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                chat_id: CHAT_ID,
                text: text,
                parse_mode: "Markdown",
            }),
        });

        const result = await response.json();

        if (!result.ok) {
            throw new Error("Error while submitting the request to Telegram");
        }

        return NextResponse.json({ success: true, message: "Request successfully submitted!" });
    } catch (error) {
        console.error("Error:", error);
        return NextResponse.json({ success: false, message: "Error while submitting the request" }, { status: 500 });
    }
}
